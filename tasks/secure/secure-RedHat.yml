---
- name: Update SSH configuration to be more secure.
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -t -f %s'
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
  notify: restart ssh

- name: Upgrade all packages
  dnf:
    name: '*'
    state: latest
    nobest: true

# User account configuration.
- name: Add a deployment user.
  user:
    name: ovpn-admin
    state: present

# Disable root login and use `sudo`.
- name: Add sudo rights for deployment user.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^ovpn-admin'
    line: 'ovpn-admin ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'

# Remove unused software, open only required ports.
- name: Remove unused packages.
  package:
    name:
      - nano
      - sendmail
    state: absent

# Automating updates for RHEL systems.
- name: Install dnf-automatic.
  when: ansible_distribution != "Amazon"
  dnf:
    name: dnf-automatic
    state: present

- name: Ensure dnf-automatic is running and enabled on boot.
  when: ansible_distribution != "Amazon"
  service:
    name: dnf-automatic-install.timer
    state: started
    enabled: true

- name: Install required packages
  dnf:
    name:
      - firewalld
      - tar
    state: present

# Configuring a firewall with `firewalld` on RHEL.
- name: Ensure firewalld is running.
  service:
    name: firewalld
    state: started

- name: Amazon Linux 2 fix (use python2)
  include_vars:
    file: vars/AL2.yml
  when: ansible_distribution == "Amazon"

- name: Configure open ports with firewalld.
  firewalld:
    state: "{{ item.state }}"
    port: "{{ item.port }}"
    zone: "{{ firewalld_default_interface_zone }}"
    immediate: true
    permanent: true
  with_items:
    - {state: 'enabled', port: '22/tcp'}
    - {state: 'enabled', port: '80/tcp'}
    - {state: 'enabled', port: '443/tcp'}
    - {state: 'enabled', port: '1194/udp'}

- name: Install fail2ban (RedHat).
  dnf:
    name: fail2ban
    state: present
    enablerepo: epel

- name: Install jq (RedHat).
  dnf:
    name: jq
    state: present

- name: Ensure fail2ban is running and enabled on boot.
  service:
    name: fail2ban
    state: started
    enabled: true

# Use SELinux (Security-Enhanced Linux).
- name: Install Python SELinux library (AL2).
  when: ansible_distribution == "Amazon"
  package:
    name: libselinux-python
    state: present

# Use SELinux (Security-Enhanced Linux).
- name: Install Python SELinux library.
  when: ansible_distribution != "Amazon"
  package:
    name: python3-libselinux
    state: present

- name: Ensure SELinux is enabled in `targeted` mode.
  tags: notest
  selinux:
    policy: targeted
    state: enforcing

- name: Ensure httpd can connect to the network.
  tags: notest
  seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when: ansible_selinux.status == 'enabled'

- name: Allow OpenVPN to listen on port 8989/tcp.
  tags: notest
  seport:
    ports: 8989
    proto: tcp
    setype: openvpn_port_t
    state: present
