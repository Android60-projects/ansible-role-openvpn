---
- name: Update apt cache (Debian)
  when: ansible_os_family == 'Debian'
  tags: molecule-idempotence-notest
  apt:
    update_cache: true

- name: Install OpenVPN and Nginx
  package:
    name:
      - openvpn
      - tar
      - nginx
      - python3-passlib
      - jq
    state: present
  tags:
    - ovpn-config

# ovpn-admin user account configuration.
- name: Add a deployment user.
  user:
    name: ovpn-admin
    state: present
  tags:
    - ovpn-config

- name: Add sudo rights for deployment user.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^ovpn-admin'
    line: 'ovpn-admin ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
  tags:
    - ovpn-config

- name: Ensure /etc/openvpn/easy-rsa exists
  ansible.builtin.file:
    path: /etc/openvpn/easy-rsa
    state: directory
    mode: "0755"
  tags:
    - ovpn-config

- name: Does EasyRSA already downloaded?
  stat:
    path: "{{ openvpn_easyrsa_path }}/easyrsa"
  register: register_easyrsa
  tags:
    - ovpn-config

- name: Does ovpn-admin already downloaded?
  stat:
    path: "{{ ovpn_admin_path }}/ovpn-admin"
  register: register_ovpn_admin
  tags:
    - ovpn-config

- block:
    - name: Determine latest GitHub release
      become: false
      uri:
        url: "https://api.github.com/repos/OpenVPN/easy-rsa/releases/latest"
        body_format: json
      register: _github_release
      when: not register_easyrsa.stat.exists
      until: _github_release.status == 200
      retries: 5

    - name: Set easyrsa_version
      when: not register_easyrsa.stat.exists
      set_fact:
        easyrsa_version: "{{ _github_release.json.tag_name
          | regex_replace('^v?(.*)$', '\\1') }}"
  when: (easyrsa_version is not defined) or (easyrsa_version == 'latest')
  run_once: true
  tags:
    - ovpn-config

- name: Download EasyRSA
  when: not register_easyrsa.stat.exists
  become: false
  get_url:
    url: "https://github.com/OpenVPN/easy-rsa/releases/download/v{{
     easyrsa_version }}/EasyRSA-v{{ easyrsa_version }}.tgz"
    dest: "/tmp/EasyRSA-latest.tgz"
  tags:
    - ovpn-config

- name: create {{ openvpn_easyrsa_path }} directory for unarchiving
  when: not register_easyrsa.stat.exists
  file:
    path: "{{ openvpn_easyrsa_path }}"
    state: directory
  tags:
    - ovpn-config

- name: Unarchive EasyRSA to {{ openvpn_easyrsa_path }}
  when: not register_easyrsa.stat.exists
  ansible.builtin.unarchive:
    src: "/tmp/EasyRSA-latest.tgz"
    dest: "{{ openvpn_easyrsa_path }}"
    extra_opts: [--strip-components=1]
    remote_src: true
  tags:
    - ovpn-config

- name: Add another bin dir to system-wide $PATH.
  copy:
    dest: /etc/profile.d/custom-path.sh
    content: 'PATH=$PATH:{{ openvpn_easyrsa_path }}'
  tags:
    - ovpn-config

- name: Easyrsa init-pki
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa init-pki"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki
  tags:
    - ovpn-genkeys

- name: Easyrsa build-ca
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa build-ca nopass"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/ca.crt
  environment:
    EASYRSA_BATCH: "yes"
  tags:
    - ovpn-genkeys

- name: Easyrsa gen-dh
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa gen-dh"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/dh.pem
  tags:
    - ovpn-genkeys

- name: Easyrsa build-server-full server nopass
  ansible.builtin.shell: echo 'yes' | {{ openvpn_easyrsa_path
   }}/easyrsa build-server-full server nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/server.crt
  tags:
    - ovpn-genkeys

- name: Easyrsa build-client-full client nopass
  ansible.builtin.shell: echo 'yes' | {{ openvpn_easyrsa_path
   }}/easyrsa build-client-full client nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/client.crt
  tags:
    - ovpn-genkeys

- name: Easyrsa gen-crl
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa gen-crl"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/crl.pem
  tags:
    - ovpn-genkeys

- name: Openvpn --genkey --secret /etc/openvpn/easy-rsa/pki/ta.key
  ansible.builtin.command:
    cmd: openvpn --genkey --secret /etc/openvpn/easy-rsa/pki/ta.key
    creates: /etc/openvpn/easy-rsa/pki/ta.key
  tags:
    - ovpn-genkeys

- name: Copy files to /etc/openvpn/server
  ansible.builtin.copy:
    src: /etc/openvpn/easy-rsa/pki/{{ item }}
    dest: /etc/openvpn/server/{{ item | basename }}
    mode: "0640"
    remote_src: true
  loop:
    - ca.crt
    - dh.pem
    - ta.key
    - issued/client.crt
    - issued/server.crt
    - private/ca.key
    - private/client.key
    - private/server.key
  tags:
    - ovpn-genkeys

- name: Copy files to /etc/openvpn
  ansible.builtin.copy:
    src: /etc/openvpn/easy-rsa/pki/{{ item }}
    dest: /etc/openvpn/{{ item | basename }}
    mode: "0640"
    remote_src: true
  loop:
    - ca.crt
    - ta.key
  tags:
    - ovpn-genkeys

- name: Place server.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ openvpn_configuration_directory }}/server/server.conf"
    owner: root
    group: root
    mode: "0640"
  notify:
    - restart openvpn-server
  tags:
    - ovpn-config
